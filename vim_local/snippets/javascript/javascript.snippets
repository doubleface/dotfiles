# Function
snippet fun
	function ${1:function_name}(${2}) {
		${0}
	}

snippet req
	var $1 = require("${1:module}");${0:}

snippet {
	{
		${0}
	}

# Flow control

# if
snippet if
	if (${1:true}) {
		${0}
	}
# if ... else
snippet ife
	if (${1:true}) {
		${2}
	} else {
		${0}
	}
# try
snippet try
	try {
		${1}
	} catch (${2:e}) {
		${0:/* handle error */}
	}

# Loops

# for loop
snippet for
	for (var ${2:i} = 0, l = ${1:arr}.length; $2 < l; $2 ++) {
		var ${3:v} = $1[$2];${0:}
	}
# While loop
snippet while
	while (${1:/* condition */}) {
		${0}
	}
# For in loop
snippet forin
	for (var ${1:prop} in ${2:object}) {
		${0:$2[$1]}
	}

# Objects

# Object Method
snippet :f
	${1:method_name}: function (${2:attribute}) {
		${3}
	},
# Define multiple properties
snippet props
	var ${1:my_object} = Object.defineProperties(
		${2:new Object()},
		{
			${3:property} : {
				get : function $1_$3_getter() {
					// getter code
				},
				set : function $1_$3_setter(value) {
					// setter code
				},
				value        : ${4:value},
				writeable    : ${5:boolean},
				enumerable   : ${6:boolean},
				configurable : ${0:boolean}
			}
		}
	);
# Define single property
snippet prop
	Object.defineProperty(
		${1:object},
		'${2:property}',
		{
			get : function $1_$2_getter() {
				// getter code
			},
			set : function $1_$2_setter(value) {
				// setter code
			},
			value        : ${3:value},
			writeable    : ${4:boolean},
			enumerable   : ${5:boolean},
			configurable : ${0:boolean}
		}
	);

# JSON

# JSON.parse
snippet jsonp
	JSON.parse(${0:jstr});
# JSON.stringify
snippet jsons
	JSON.stringify(${0:object});

# DOM selectors

# console.log
snippet log
	console.log(${0});
# console.debug
snippet debug
	console.debug(${0});
# console.trace
snippet trace
	console.trace(${0:label});
# console.time
snippet time
	console.time(${0:label});
# console.assert
snippet assert
	console.assert(${1:expression}, ${0:obj});
# console.dir
snippet dir
	console.dir(${0:obj});

# Misc

# 'use strict';
snippet us
	"use strict";
